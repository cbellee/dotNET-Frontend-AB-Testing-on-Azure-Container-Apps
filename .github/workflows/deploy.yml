name: Build and deploy .NET application to Container App silo

on:
  push:
    branches:
    - main
    - beta
  workflow_dispatch:  

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  
  # alphanumeric string under 14 characters
  RESOURCE_GROUP_NAME: acafeatureflags

  # specify your preferred region
  REGION: australiaeast

  FRONTEND_DOCKER: TargetingFeatureFlagsEntraID/Dockerfile
  FRONTEND_IMAGE: frontend

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout branch 
      uses: actions/checkout@v4
    
    - name: Branch name
      run: echo "running on branch ${GITHUB_REF##*/}"

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AzureSPN }}

    - name: Create resource group
      uses: azure/CLI@v2
      with:
        inlineScript: >
          echo "Creating resource group in Azure"
          echo "Executing 'az group create -l ${{ env.REGION }} -n ${{ env.RESOURCE_GROUP_NAME }}'"

          az group create -l ${{ env.REGION }} -n ${{ env.RESOURCE_GROUP_NAME }}

    - name: Creating resources
      uses: azure/CLI@v2
      with:
        inlineScript: >
          echo "Creating resources"
          az deployment group create --resource-group ${{ env.RESOURCE_GROUP_NAME }} --template-file 'Azure/main.bicep' --parameters label=${{ env.BRANCH_NAME }}

  build:
    runs-on: ubuntu-latest
    needs: provision
    
    steps:

    - name: Checkout to the branch
      uses: actions/checkout@v4

    - name: Branch name
      run: echo "running on branch ${{ env.BRANCH_NAME }}"

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AzureSPN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io <<< "$refresh_token"

    - name: Build the frontend image and push it to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }}
        file: ${{ env.FRONTEND_DOCKER }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:

    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AzureSPN }}

    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io <<< "$refresh_token"

    - name: Deploy Container Apps
      uses: azure/CLI@v2
      with:
        inlineScript: >
          az containerapp update -n frontend --revision-suffix ${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }} -g ${{ env.RESOURCE_GROUP_NAME }} -i ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }}
          
          az containerapp revision label add --revision frontend-${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --label ${{ env.BRANCH_NAME }}

    - name: logout
      run: >
        az logout
